// Firebase
const firebaseConfig = {
  apiKey: "AIzaSyCgSFDj7fRw6HSvZyOz1g5IM749f2sY55M",
  authDomain: "wordquiz-659d7.firebaseapp.com",
  databaseURL: "https://wordquiz-659d7-default-rtdb.firebaseio.com",
  projectId: "wordquiz-659d7",
  storageBucket: "wordquiz-659d7.firebasestorage.app",
  messagingSenderId: "785560761880",
  appId: "1:785560761880:web:9455e5767af0e0b9b1f56d"
};
firebase.initializeApp(firebaseConfig);
const database = firebase.database();

// –¢–≤–æ–π –∫–æ–¥ –¥–∞–ª—å—à–µ ‚Üì‚Üì‚Üì
let words=[], allWords=[], index=0, correct_answers=0, wrong_answers=0;
let reverse=false, currentWord=null, remainingWords=[];
let inputMode=false;

const switchBtn=document.getElementById('switchBtn');
const modeBtn=document.getElementById('modeBtn');
const fiftyBtn=document.getElementById('fiftyBtn');
const wordDiv=document.getElementById('word');
const answersDiv=document.getElementById('answers');
answersDiv.style.display = 'none';
const inputModeDiv=document.getElementById('inputModeDiv');
const answerInput=document.getElementById('answerInput');
const feedback=document.getElementById('feedback');
const submitAnswerBtn=document.getElementById('submitAnswerBtn');
const submitWrapper=document.getElementById('submitWrapper');
const progressDiv=document.getElementById('progress');
const progressFill=document.getElementById('progressFill');
const progressBar = document.getElementById('progressBar');
progressDiv.style.display = 'none';
progressFill.style.display = 'none';
switchBtn.style.display = 'none';
fiftyBtn.style.display = 'none';
modeBtn.style.display = 'none';
progressBar.style.display = 'none';

// –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
progressDiv.style.display = 'none';
progressFill.style.display = 'none';
// –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
switchBtn.style.display = 'none';
fiftyBtn.style.display = 'none';
modeBtn.style.display = 'none';
progressBar.style.display = 'none';

function focusInputSoon() {
  if (!inputMode) return;
  requestAnimationFrame(()=>{
    answerInput.focus({ preventScroll: true });
    // –∫—É—Ä—Å–æ—Ä –≤ –∫–æ–Ω–µ—Ü
    const len = answerInput.value.length;
    try { answerInput.setSelectionRange(len, len); } catch(e){}
  });
}

switchBtn.addEventListener('click', ()=>{reverse=!reverse; if(currentWord) drawCurrentQuestion();});
fiftyBtn.addEventListener('click', useFifty);

// –ù–ï –¥–∞—ë–º –∫–Ω–æ–ø–∫–µ –≤–æ—Ä–æ–≤–∞—Ç—å —Ñ–æ–∫—É—Å (—á—Ç–æ–±—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–ª–∞—Å—å)
submitAnswerBtn.addEventListener('mousedown', e => e.preventDefault());
submitAnswerBtn.addEventListener('touchstart', e => {
  e.preventDefault();
  submitFromButton();
}, {passive:false});
submitAnswerBtn.addEventListener('click', e => {
  e.preventDefault();
  submitFromButton();
});

function submitFromButton(){
  if(!currentWord) return;
  const correct = reverse ? currentWord.word : currentWord.trans;
  checkTextAnswer((answerInput.value||"").trim(), correct);
}

modeBtn.addEventListener('click', ()=>{
  inputMode=!inputMode;
  if(inputMode){
    answersDiv.style.display='none';
    inputModeDiv.style.display='block';
    submitWrapper.style.display='block';
    fiftyBtn.style.display='none';
    modeBtn.textContent='üéõÔ∏è';
    focusInputSoon();
  } else {
    answersDiv.style.display='grid';
    inputModeDiv.style.display='none';
    submitWrapper.style.display='none';
    fiftyBtn.style.display='inline-block';
    modeBtn.textContent='‚úçÔ∏è';
  }
  if(currentWord) drawCurrentQuestion();
});

function loadNextWord(){
  if(remainingWords.length===0){
    // –ë–µ–∑ alert, —á—Ç–æ–±—ã –Ω–µ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    wordDiv.textContent='–ì–æ—Ç–æ–≤–æ! –í—ã –ø—Ä–æ—à–ª–∏ –≤—Å–µ —Å–ª–æ–≤–∞ üéâ';
    wordDiv.classList.remove('placeholder');
    answersDiv.style.display='none';
    inputModeDiv.style.display='none';
    submitWrapper.style.display='none';
    return;
  }
  currentWord=remainingWords.pop();
  index++;
  document.getElementById('welcome').style.display='none';
  drawCurrentQuestion();
  focusInputSoon();
}

function drawCurrentQuestion(){
  const question=reverse?currentWord.trans:currentWord.word;
  const correct=reverse?currentWord.word:currentWord.trans;

  wordDiv.textContent=question;
  wordDiv.classList.remove('placeholder');

  progressDiv.textContent=`${index} –∏–∑ ${allWords.length} (${correct_answers}/${wrong_answers})`;
  progressFill.style.width=`${(index/allWords.length)*100}%`;

  if(!inputMode){
    const allOptions=allWords.map(x=>reverse?x.word:x.trans).filter(x=>x!==correct);
    let options=[correct,...shuffleArray(allOptions).slice(0,3)];
    options=shuffleArray(options);
    const buttons=answersDiv.querySelectorAll('.answerBtn');
    buttons.forEach((btn,i)=>{
      btn.textContent=options[i]; btn.disabled=false; btn.className='answerBtn'; btn.onclick=()=>checkAnswer(btn,correct);
    });
    fiftyBtn.disabled=false;
  } else {
    feedback.textContent='';
    feedback.className='';
    answerInput.value='';
    focusInputSoon();
    // Enter —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
    answerInput.onkeydown=(e)=>{ if(e.key==="Enter"){ e.preventDefault(); submitFromButton(); } };
  }
}

function checkAnswer(btn, correct){
  if(!currentWord){ 
    // —Å–ø–∏—Å–æ–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω ‚Äî –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º select
    listSelect.style.borderColor = 'red';
    listSelect.style.transition = 'transform 0.2s, border-color 0.2s';
    listSelect.style.transform = 'translateY(-5px)';
    setTimeout(()=>{
      listSelect.style.transform = 'translateY(5px)';
      setTimeout(()=>{
        listSelect.style.transform = 'translateY(0)';
        listSelect.style.borderColor = '#ccc';
      }, 100);
    }, 100);
    return;
  }

  // –æ–±—ã—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
  if(btn.textContent === correct) correct_answers++; else wrong_answers++;
  const buttons = answersDiv.querySelectorAll('.answerBtn');
  buttons.forEach(b=>{
    b.disabled = true;
    if(b.textContent === correct) b.classList.add('correct');
    else if(b === btn) b.classList.add('wrong');
  });
  setTimeout(()=>loadNextWord(), btn.textContent === correct ? 500 : 2000);
}


function checkTextAnswer(userAnswer, correct){
if (!userAnswer) {
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∫—Ä–∞—Å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
  answerInput.classList.add('error');

  // –ü–æ–¥–ø—Ä—ã–≥–∏–≤–∞–Ω–∏–µ
  answerInput.style.transition = 'transform 0.2s';
  answerInput.style.transform = 'translateY(-5px)';
  setTimeout(() => {
    answerInput.style.transform = 'translateY(5px)';
    setTimeout(() => {
      answerInput.style.transform = 'translateY(0)';
    }, 100);
  }, 100);

  // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å —á–µ—Ä–µ–∑ 0.5 —Å–µ–∫—É–Ω–¥—É
  setTimeout(() => {
    answerInput.classList.remove('error');
  }, 500);

  focusInputSoon();
  return;
}

if (userAnswer.toLowerCase() === correct.toLowerCase()) {
    correct_answers++;
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–µ–ª—ë–Ω—É—é –ø–æ–¥—Å–≤–µ—Ç–∫—É
    answerInput.classList.add('success');
    // –ü–æ–¥–ø—Ä—ã–≥–∏–≤–∞–Ω–∏–µ, –∫–∞–∫ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    answerInput.style.transition = 'transform 0.2s';
    answerInput.style.transform = 'translateY(-5px)';
    setTimeout(() => {
        answerInput.style.transform = 'translateY(5px)';
        setTimeout(() => {
            answerInput.style.transform = 'translateY(0)';
        }, 100);
    }, 100);

    // –£–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
    setTimeout(() => {
        answerInput.classList.remove('success');
    }, 500);

    // –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–æ–≤—É
    setTimeout(() => { loadNextWord(); }, 500);
  } else {
    wrong_answers++;
    feedback.textContent= correct;
    feedback.className='err';
    // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º 3—Å –∏ –∏–¥—ë–º –¥–∞–ª—å—à–µ
    setTimeout(()=>{ loadNextWord(); }, 3000);
  }
  focusInputSoon();
}

function useFifty(){
  const correct=reverse?currentWord.word:currentWord.trans;
  let wrongBtns=Array.from(answersDiv.querySelectorAll('.answerBtn')).filter(b=>b.textContent!==correct&&!b.disabled);
  shuffleArray(wrongBtns).slice(0,2).forEach(b=>{ b.disabled=true; b.classList.add('disabled'); });
  fiftyBtn.disabled=true;
}

function shuffleArray(array){
  for(let i=array.length-1;i>0;i--){
    const j=Math.floor(Math.random()*(i+1));
    [array[i], array[j]]=[array[j], array[i]];
  }
  return array;
}

const listSelect=document.getElementById('listSelect');
const addListToggle=document.getElementById('addListToggle');
const addListForm=document.getElementById('addListForm');
const addListBtn=document.getElementById('addListBtn');
const newListName=document.getElementById('newListName');
const newListText=document.getElementById('newListText');

const listContainer = document.getElementById('listContainer');
const deleteListBtn = document.getElementById('deleteListBtn');
const ADMIN_CODE = "89991627939"; // –∫–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞

// –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const saveListBtn = document.getElementById('saveListBtn');

saveListBtn.addEventListener('click', () => {
  const input = document.createElement('input');
  input.type = 'file';
  input.accept = '.txt';
  input.onchange = async (e) => {
    const file = e.target.files[0];
    if (!file) return;

    const fileName = file.name.replace(/\.txt$/i, ''); // –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ .txt
    const text = await file.text(); // —á–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    const newWords = text.split('\n').map(line => {
      const [word, trans] = line.split(';').map(x => x.trim());
      return word && trans ? { word, trans } : null;
    }).filter(x => x);

    if (newWords.length === 0) {
      alert('–§–∞–π–ª –ø—É—Å—Ç–æ–π –∏–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "—Å–ª–æ–≤–æ;–ø–µ—Ä–µ–≤–æ–¥" –Ω–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ.');
      return;
    }

    // ‚ö° –ù–æ–≤—ã–π –≤—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è
    const action = confirm('–ù–∞–∂–º–∏—Ç–µ –û–ö, —á—Ç–æ–±—ã –î–û–ë–ê–í–ò–¢–¨ –∫–∞–∫ –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫.\n–ù–∞–∂–º–∏—Ç–µ –û—Ç–º–µ–Ω–∞, —á—Ç–æ–±—ã –ü–†–û–°–¢–û –û–¢–ö–†–´–¢–¨.');
    const action = confirm('–ù–∞–∂–º–∏—Ç–µ –û–ö, —á—Ç–æ–±—ã –î–û–ë–ê–í–ò–¢–¨ –∫–∞–∫ –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫.\n–ù–∞–∂–º–∏—Ç–µ –û—Ç–º–µ–Ω–∏—Ç—å, —á—Ç–æ–±—ã –ü–†–û–°–¢–û –û–¢–ö–†–´–¢–¨.');

    if (action) {
      // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –≤ Firebase
      database.ref('lists/' + fileName).set(newWords)
        .then(() => {
          alert(`–°–ø–∏—Å–æ–∫ "${fileName}" –¥–æ–±–∞–≤–ª–µ–Ω!`);
          loadAllLists(); // –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤ select
        })
        .catch(err => {
          console.error(err);
          alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞');
        });
    } else {
      // ‚úÖ –ü—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ, –±–µ–∑ –±–∞–∑—ã
      words = newWords;
      allWords = [...new Map(words.map(w => [`${w.word};${w.trans}`, w])).values()];
      remainingWords = shuffleArray([...allWords]);
      index = 0; correct_answers = 0; wrong_answers = 0; currentWord = null;

      wordDiv.classList.remove("placeholder");
      answersDiv.style.display = 'grid';
      progressDiv.style.display = 'block';
      progressFill.style.display = 'block';
      switchBtn.style.display = 'inline-block';
      fiftyBtn.style.display = 'inline-block';
      modeBtn.style.display = 'inline-block';
      progressBar.style.display = 'block';

      loadNextWord();
    }
  };
  input.click(); // –æ—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
});

// –ü–æ–∫–∞–∑ –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Å–ø–∏—Å–∫–∞
listSelect.addEventListener('change', () => {
  deleteListBtn.style.display = listSelect.value ? 'inline-block' : 'none';
});

// –£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞
deleteListBtn.addEventListener('click', () => {
  const code = prompt("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞:");
  if(code !== ADMIN_CODE){
    alert("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥!");
    return;
  }
  const selected = listSelect.value;
  if(!selected) return;

  // –£–¥–∞–ª—è–µ–º –∏–∑ Firebase
  database.ref('lists/'+selected).remove()
    .then(() => {
      alert(`–°–ø–∏—Å–æ–∫ "${selected}" —É–¥–∞–ª—ë–Ω`);
      // –£–¥–∞–ª—è–µ–º –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
      const option = listSelect.querySelector(`option[value="${selected}"]`);
      if(option) option.remove();
      listSelect.value = ""; // —Å–±—Ä–æ—Å –≤—ã–±–æ—Ä–∞
      deleteListBtn.style.display = 'none';
    })
    .catch(err => console.error(err));
});


function loadAllLists(){
  database.ref('lists').once('value').then(snapshot=>{
    const data=snapshot.val()||{};
    listSelect.innerHTML='<option disabled selected>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–∏—Å–æ–∫</option>';
    for(let key in data){
      const option=document.createElement('option');
      option.value=key; option.textContent=key;
      listSelect.appendChild(option);
    }
    // –î–æ –≤—ã–±–æ—Ä–∞ —Å–ø–∏—Å–∫–∞ ‚Äî –∫—Ä–∞—Å–Ω–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞
    wordDiv.textContent = "";
    wordDiv.classList.add("placeholder");
  });
  database.ref('lists').once('value')
    .then(snapshot => {
      const data = snapshot.val();
      if (!data) {
        // ‚ö° –ï—Å–ª–∏ Firebase –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
        wordDiv.textContent = "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–∫–∏ ‚ö†Ô∏è\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É üì∂\n–∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ VPN üïµÔ∏è";
        wordDiv.classList.remove("placeholder");
        listSelect.innerHTML = '<option disabled selected>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤</option>';
        return;
      }

      // ‚úÖ –ï—Å–ª–∏ —Å–ø–∏—Å–∫–∏ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
      listSelect.innerHTML = '<option disabled selected>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–∏—Å–æ–∫</option>';
      for (let key in data) {
        const option = document.createElement('option');
        option.value = key;
        option.textContent = key;
        listSelect.appendChild(option);
      }
      wordDiv.textContent = "";
      wordDiv.classList.add("placeholder");
    })
    .catch(err => {
      console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–æ–≤:", err);
      wordDiv.textContent = "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–∫–∏ ‚ö†Ô∏è\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É üì∂\n–∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ VPN üïµÔ∏è";
      wordDiv.classList.remove("placeholder");
      listSelect.innerHTML = '<option disabled selected>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤</option>';
    });
}
loadAllLists();

listSelect.onchange=()=>{
  const selected=listSelect.value;
  if(!selected) return;
  database.ref('lists/'+selected).once('value').then(snapshot=>{
    const data=snapshot.val();
    words=Object.values(data);
    allWords=[...new Map(words.map(w=>[`${w.word};${w.trans}`,w])).values()];
    remainingWords=shuffleArray([...allWords]);
    index=0; correct_answers=0; wrong_answers=0; currentWord=null;
    wordDiv.classList.remove("placeholder");
// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Å–ø–∏—Å–∫–∞
    answersDiv.style.display = 'grid';
    progressDiv.style.display = 'block';
    progressFill.style.display = 'block';
    switchBtn.style.display = 'inline-block';
    fiftyBtn.style.display = 'inline-block';
    modeBtn.style.display = 'inline-block';
    progressBar.style.display = 'block';
    loadNextWord();
  });
};

addListToggle.onclick=()=>{ addListForm.style.display=addListForm.style.display==='none'?'flex':'none'; };
addListBtn.onclick=()=>{
  const name=newListName.value.trim();
  const text=newListText.value.trim();
  if(!name||!text) return alert('–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–ø–∏—Å–∫–∞ –∏ —Å–ª–æ–≤–∞');
  const newWords=text.split('\n').map(line=>{
    const [word,trans]=line.split(';').map(x=>x.trim()); 
    return {word,trans};
  }).filter(x=>x.word&&x.trans);
  database.ref('lists/'+name).set(newWords).then(()=>{
    alert('–°–ø–∏—Å–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω!'); newListName.value=''; newListText.value=''; addListForm.style.display='none'; loadAllLists();
  }).catch(err=>console.error(err));
};


// –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
document.addEventListener('gesturestart', e=>e.preventDefault());
let lastTouchEnd=0;
document.addEventListener('touchend', e=>{
  const now=new Date().getTime();
  if(now-lastTouchEnd<=300) e.preventDefault();
  lastTouchEnd=now;
}, false);
document.addEventListener('touchstart', e=>{ if(e.touches.length>1) e.preventDefault(); }, {passive:false});

// --- –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ iOS PWA ---
let vh = window.innerHeight;

window.addEventListener('resize', () => {
    const newVh = window.innerHeight;
    const delta = vh - newVh;

    if (delta > 150) { // –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–∫—Ä—ã–ª–∞—Å—å
        submitWrapper.style.position = 'absolute';
        submitWrapper.style.bottom = delta + 'px';
    } else {
        submitWrapper.style.position = 'static';
        submitWrapper.style.bottom = 'auto';
    }
});

